(function(){window.Conpherence=Ember.Application.create({LOG_TRANSITIONS:!0,LOG_TRANSITIONS_INTERNAL:!0,rootElement:"#application"}),Conpherence.ApplicationAdapter=DS.FixtureAdapter.extend({}),Conpherence.ApplicationController=Ember.ArrayController.extend({connections:[]}),Conpherence.Router.map(function(){return this.route("missing",{path:"/*path"})}),Conpherence.Router.reopen({location:"history"}),Conpherence.MissingRoute=Ember.Route.extend({redirect:function(){return this.transitionTo("404")}}),Conpherence.ApplicationView=Ember.View.extend({classNames:["ember-view","wrapper"]}),Conpherence.IndexView=Ember.View.extend({webrtc:null,didInsertElement:function(){var webrtc;return $("#conversation").createWebRTC({appID:"",username:"tomasbasham",local:"#local",remote:"#remote",signallingServer:"http://conpherence.herokuapp.com/"}),webrtc=$("#conversation").data("webrtc"),webrtc.onInitialised=function(){return console.log("Initialised")},webrtc.onInitilisedFailed=function(){return console.log("Initialisation failed")},webrtc.onConnectionLost=function(){return console.log("Lost connection")},webrtc.phone.onIncomingCall=function(call){return window.confirm("Answer call from: "+call.getRemoteAddress()+"?")?call.answer():call.end()}}})}).call(this),Ember.TEMPLATES.application=Ember.Handlebars.template(function(Handlebars,depth0,helpers,partials,data){function program1(depth0,data){var stack1,hashTypes,hashContexts,buffer="";return data.buffer.push("\n		<li>\n			"),hashTypes={},hashContexts={},stack1=helpers._triageMustache.call(depth0,"name",{hash:{},contexts:[depth0],types:["ID"],hashContexts:hashContexts,hashTypes:hashTypes,data:data}),(stack1||0===stack1)&&data.buffer.push(stack1),data.buffer.push("\n		</li>\n		"),buffer}this.compilerInfo=[4,">= 1.0.0"],helpers=this.merge(helpers,Ember.Handlebars.helpers),data=data||{};var stack1,hashTypes,hashContexts,buffer="",self=this;return data.buffer.push('<!-- Secondary navigation -->\n<nav id="primary">\n	<header id="logo">\n		<img src="/assets/images/conpherence.png" alt="Conpherence" />\n	</header>\n	<div id="search">\n		<form id="searchbox">\n			<fieldset data-role="controlgroup">\n				<input id="search-item" class="form-control form-control-inline" type="text" value="" placeholder="username" />\n			</fieldset>\n		</form>\n	</div>\n	<ul id="list">\n		'),hashTypes={},hashContexts={},stack1=helpers.each.call(depth0,"connections",{hash:{},inverse:self.noop,fn:self.program(1,program1,data),contexts:[depth0],types:["ID"],hashContexts:hashContexts,hashTypes:hashTypes,data:data}),(stack1||0===stack1)&&data.buffer.push(stack1),data.buffer.push('\n	</ul>\n</nav>\n\n<!-- Main section -->\n<section id="maincontainer">\n	'),hashTypes={},hashContexts={},stack1=helpers._triageMustache.call(depth0,"outlet",{hash:{},contexts:[depth0],types:["ID"],hashContexts:hashContexts,hashTypes:hashTypes,data:data}),(stack1||0===stack1)&&data.buffer.push(stack1),data.buffer.push("\n</section>"),buffer}),Ember.TEMPLATES.index=Ember.Handlebars.template(function(Handlebars,depth0,helpers,partials,data){this.compilerInfo=[4,">= 1.0.0"],helpers=this.merge(helpers,Ember.Handlebars.helpers),data=data||{},data.buffer.push('<div id="conversation">\n	<!-- Video elements -->\n	<div class="remoteContainer">\n		<video id="remote" autoplay width="100%" height="100%">Not Supported</video>\n	</div>\n	<div class="localContainer">\n		<video id="local" autoplay width="100%" height="100%"></video>\n	</div>\n</div>')});